describe("BinaryOperatorFunctions", function(){
	function Maps(symbol, func){
		it("maps " + symbol + " to " + func, function(){
			var arr = src.__get__("BinaryOperatorFunctions")
			expect(arr[symbol]).not.toBeUndefined()
			expect(arr[symbol].indexOf(func)).not.toEqual(-1)
		})
	}
	Maps("+", "integerAdd")
    Maps("+", "floatAdd")
	Maps("-", "integerSubtract")
    Maps("-", "floatSubtract")
	Maps("*", "integerMultiply")
    Maps("*", "floatMultiply")
	Maps(">", "integerGreaterThan")
    Maps(">", "floatGreaterThan")
	Maps("<", "integerLessThan")
    Maps("<", "floatLessThan")
	Maps("==", "integerEqual")
	Maps("!=", "integerNotEqual")
	Maps("<=", "integerLessThanOrEqual")
	Maps(">=", "integerGreaterThanOrEqual")
	Maps("|", "booleanOr")
    Maps("&", "booleanAnd")
    Maps(",", "booleanConcatenate")
    Maps(",", "integerConcatenate")
    Maps(",", "floatConcatenate")
    Maps(":", "booleanPair")
    Maps(":", "integerPair")
    Maps(":", "floatPair")
    Maps("?", "booleanConditional")
    Maps("?", "integerConditional")
    Maps("?", "floatConditional")
})